

%**************************************************************************
%//////////////////////////////////////////////////////////////////////////
%///// Methode des moindres carres  ///////////////////////////////////////
%//////////////////////////////////////////////////////////////////////////
%//////////////////////////////////////////////////////////////////////////
%// Considerons le modele ARX avec une variable explicative U=P(précipitation)
%// la sortie est le débit Q, d'ordre ARX(na,nb) //////////////////////////
%// A(z)Y(k)=B(Z)U(k-nk)+e(k)//////////////////////////////////////////////////
%//////////////////////////////////////////////////////////////////////////
%// On doit estimer les coefficients ai i=1,2,...,na et bj, j=1,2,...,nb//
%// Donc en tout, na+nb parametres a estimer(inconues) --> na+nb equations minimum //
%//////////////////////////////////////////////////////////////////////////
%// Periode de calibration: 
%// N1=[2300,2500];              
%// Periode de prevision: 
%// N2=[3000,3500]
%// Ordre du systeme: na=3, nb=3, nk=1;
%//////////////////////////////////////////////////////////////////////////
% REFERENCE: R Longchamp, Commande Numérique de Systèmes Dynamiques
%                         Presse Polytechniques et universitaires Romandes
%**************************************************************************


function   MMC


%**************************************************************************
%*****************************************************************************
%///// Programme principale //////////////////////////////////////////////////
%/////////////////////////////////////////////////////////////////////////////

%//////////////////////////////////////////////////////////////////////////
%////////  1 Sous fonction : Charger  /////////////////////////////////////
%//////////////////////////////////////////////////////////////////////////
[P,Q]=Charger;

%//////////////////////////////////////////////////////////////////////////
%////////  2 Sous fonction : Partie interactive  /////////////////////////////////////
%//////////////////////////////////////////////////////////////////////////
sprintf('Ce programme permet d estimer le vecteur paramètre (MMC) et de simuler le débit') 
reply = input('Voulez-Vous continuer? oui=1, non=0 :');
if isempty(reply)
    quit;
elseif reply
N1 = input('Choisir la période de crue pour le calibrage des paramètres du modèle ARX? : N1=[N1(1),N1(2)]=');
N2 = input('Choisir la période de crue pour la simulation? : N2=[N2(1),N2(2)]=');
na = input('Choisir l ordre pour AR, na=');
nb = input('Choisir l ordre pour la partie explicative, nb=');
nk = input('Choisir le retard, si vous ne savez pas, mettre nk=0, nk=');
H = waitbar(0,'SVP, Attendre la fin des calculs...');

%//////////////////////////////////////////////////////////////////////////
%////////  3 Sous fonction : EstParm  /////////////////////////////////////
%//////////////////////////////////////////////////////////////////////////
[Teta]=EstParm(N1,na,nb,Q,P,nk);
Teta
%//////////////////////////////////////////////////////////////////////////
%////////  4 Sous fonction : Simulation  /////////////////////////////////////
%//////////////////////////////////////////////////////////////////////////
[yh]=Simulation(N2,P,Q,na,nb,nk,Teta);
            
            
%//////////////////////////////////////////////////////////////////////////
%////////  5 Sous fonction : Dessiner  /////////////////////////////////////
%//////////////////////////////////////////////////////////////////////////
Dessiner(yh,Q,P,N2);
%//////////////////////////////////////////////////////////////////////////
%////////  6 Sous fonction : Critere_Validation  //////////////////////////
%//////////////////////////////////////////////////////////////////////////
Critere_Validation(Q,yh,N2,na,nb);
%//////////////////////////////////////////////////////////////////////////

Modele(Teta,na,nb)

close(H)
end

%*****************************************************************************
%/////////////////////////////////////////////////////////////////////////////
%/////////////////////////////////////////////////////////////////////////////

function [Teta]=EstParm(N1,na,nb,Q,P,nk)


for j=N1(1):N1(2)
    
    Y(j-N1(1)+1)=Q(j);

for k=1:na
Phi((j-N1(1)+1),k) =[-Q(j-k)];
end    
    

for k=1:nb
Phi((j-N1(1)+1),k+na) =[P(j-k+1-nk)];
end



end

%/////////////////////////////////////////////////////////////////////////////
%/// Estimation des parametres ai et bi 
Pm = inv((Phi')*Phi);
%//// Estimation des parametres d'ajustement/////////////////////////
Teta = Pm*(Phi')*(Y')
%/////////////////////////////////////////////////////////////////////////////
%//////////////////////////////////////////////////////////////////////////

%*************************************************************************
%//////////////////////////////////////////////////////////////////////////
%Commencer par charger les données: moyenne journalière du bassin /////////
function [P,Q]=Charger
load('Gletch.txt');  %Charger les inputs

Peq_non_glacier_gletsch=Gletch(1:5136)  ;
Peq_glacier_gletsch=Gletch(5137:10272) ;
Mgl_glacier_gletsch=Gletch(10273:15408)  ;

P=Peq_non_glacier_gletsch+Peq_glacier_gletsch+Mgl_glacier_gletsch ;
load('aaDEBIT_horaire2.txt');
%Charger les donnees horaires du bassin Gletsch
D=aaDEBIT_horaire2(1:5136);
%charger les donnees horaires de bassin Aptal
D2=aaDEBIT_horaire2(10273:19032);
%Charger les inputs horaires du bassin Gletsch (pluies equivalentes)
%load('Gletch.txt');
%P=Gletch(10273:15408);
Q=D;


figure,subplot(2,1,1), plot(Q), 
xlabel('Année 1990 à 1995, Temps en pas d1 heure')%//////////////
ylabel('Debits à l exutoire du Bassin Gletsch (mm)'), grid on
subplot(2,1,2), plot(P)
ylabel('Precipitation Equivalente (mm)'), grid on
xlabel('Temps en pas d1 heure')%//////////////


%/////////////////////////////////////////////////////////////////////////////
%**************************************************************************
%**************************************************************************



%*****************************************************************************
%/////////////////////////////////////////////////////////////////////////////
%/////////////////  Plot des debits mesurees et des previsions //////////////
%/////////////////////////////////////////////////////////////////////////////
function Dessiner(yh,Q,P,N2);

%/////// Plot des Précipitations  //////////////
figure,subplot(4,1,1),plot((N2(1)+1:N2(2)),P(N2(1)+1: N2(2))); 
%title('Precipitation Equivalente ');
ylabel('Precipitation Equivalente'), grid on
xlabel('Temps en pas d1 jour')
legend('Precipitation Equivalente') ;

%/////// Plot des Précipitations /////////////
subplot(4,1,2),plot((N2(1)+1:N2(2)),Q(N2(1)+1: N2(2)),'k');
hold on, plot((N2(1)+1:N2(2)),yh(N2(1)+1:N2(2))','r');
legend('Débit mesuré','Débit prédit ARX (MMC)') ;
xlabel('Temps: Pas de temps journalier');
ylabel('Débit');

%/////// Calcul et plot des erreurs  //////////////
e(N2(1)+1: N2(2))=Q(N2(1)+1: N2(2))-(yh(N2(1)+1: N2(2)))';
subplot(4,1,3),plot((N2(1)+1: N2(2)),100*(e(N2(1)+1: N2(2)))/max(Q(N2(1)+1: N2(2)))); 
%title('Erreur de prédiction en %');
ylabel('Erreur de prédiction en %'), grid on
xlabel('Temps en pas d1 jour')
legend('Erreur de prédiction en %') ;


%//////////////////////////////////////////////////////////////////////////
%// Plot du debit mesure en fonction du debit simule
%//////////////////////////////////////////////////////////////////////////
subplot(4,1,4), plot(yh(N2(1)+1:N2(2)),Q(N2(1)+1: N2(2)),'o');
legend('nuage de points') ;
xlabel('Débit mesuré ');
ylabel('Débit prédit ');


%/////////////////////////////////////////////////////////////////////////////
%*****************************************************************************

function [yh]=Simulation(N2,P,Q,na,nb,nk,Teta)
      
%///////////////////////////////////////////////  
for i=N2(1)+1:N2(2)  
    
%/////// Estimation de Phi //////////////////
%/// Vecteur de mesure ou d'observation /////
for k=1:na        
Ph(k) =[-Q(i-k)]  ;  
end

for k=1:nb
Ph(k+na) =[P(i-k+1-nk)];
end
 
%/// Estimation des erreurs de prévisions du modele ARX
yh(i)=Ph*Teta;   %// Prévision

end
%/////////////////////////////////////////////////////////////////////////////
%*****************************************************************************



function Critere_Validation(Q,yh,N1,na,nb)

%//////////////////////////////////////////////////////////////////////////
%/////////////////////////////////////////////////////////////////////////
%//////////////////////////////////////////////////////////////////////////
e= [Q(N1(1)+1: N1(2))]- [yh(N1(1)+1:N1(2))]' ;  %// Calcul de l'erreur de prevision
%/////////////////////////////////////////////////////////////////////////

%//////////////////////////////////////////////////////////////////////////
%/////////////////////////////////////////////////////////////////////////
%////  Autocorrélation de l'erreur de prédiction (MMCRP)  /////////////////
N=length(e);
[R,s]=xcorr(e,'biased');
mx=max(R);
figure,plot(s(N-2:end),R(N-2:end)/mx), grid on
title('Autocorrélation de Erreur de prédiction');
xlabel('Temps: Année 1994 à 1996 avec un pas de temps journalier');
ylabel('Autocorrélation de Erreur de prévision');
sprintf('FONCTION D AUTOCORRELATION: R(0), RN(0)...RN(10)') 
sprintf(' R(0)') 
R(N)
sprintf('RN(0)...RN(10)') 
(R(N:N+10)/mx )' %//
%/////////////  Test de blancheur de l'erreur de prédiction  /////////////
a=1.96/sqrt(N);
f=ones(N);
hold on, plot(a*f(1,:),'r');
hold on, plot(-a*f(1,:),'r');
legend('Autocorrélation','Intervalle de confiance 95%: Borne Sup','Intervalle de confiance 95%: Borne Inf' ) ;
%//////////////////////////////////////////////////////////////////
%/// Fonction d'erreur ///////////////////////////////////////////
%//////////////////////////////////////////////////////////////////
%/// Le biais  //////////////////////////////////////////////////
m1=mean(Q(N1(1)+1: N1(2)));
m2=mean(yh(N1(1)+1:N1(2)));
Biais=100*[(m2-m1)/m1]
%///////////////////////////////////////////////////////////
%/// Coefficient de Nash-Suttcliffe  ///////////////////////
E1=(e'*e);
E2=(Q(N1(1)+1: N1(2))-m1);
E2=E2'*E2;
Nash= 1-(E1/E2) 
%//////////////////////////////////////////////////////////////////////////
%// Coefficient de correlation 
%/////////////////////////////////////////////////////////////////////////
r=corrcoef(Q(N1(1)+1: N1(2)),yh(N1(1)+1:N1(2)));
r=r(1,2)
%/////////////////////////////////////////////////////////////////////////
%*****************************************************************************
%///////////////////////////////////////////////////////////
%/// AIC: Akaike Information Criterion  ////////////////////
E=sum(e);
E=abs(E);
AIC=log10(E)+2*((na+nb)/N)
%/// FPE: Final Prediction Error  ////////////////////
FPE=E1*((N+na+nb-1)/(N-na-nb-1))
%/// Variance des erreurs  ////////////////////
VarE=E1/N
%/////////////////////////////////////////////////////////////////////////////
%*****************************************************************************
%//////////////////////////////////////////////////////////////////////////
%*****************************************************************************
%//////////////////////////////////////////////////////////////////////////

function Modele(Teta,na,nb)


den=[1,-Teta(1:na)'];
num1=[Teta(na+1:na+nb)'];

if  (na>0)&(nb>0)
%//////////////////////////////////////////////////////////////////////
%/////////////////////////////////////////////////////////////////////
  sys1 = tf(num1,den,1)
Z1=zpk(sys1)
%figure,pzmap(sys1)
%pole(sys1)
%zero(sys1)
%//////////////////////////////////////////////////////////////////////////
%/////////////////////////////////////////////////////////////////////////
sysc = d2c(sys1,'tustin')
H = zpk(sysc)
[z,p,k] = zpkdata(sys1)
%figure,step(H)
%figure, impulse(H)
%figure,pzmap(H)
  
elseif (na==0)&(nb>0)
%//////////////////////////////////////////////////////////////////////
%/////////////////////////////////////////////////////////////////////    
sys = tf(num1,1,1)
Z=zpk(sys)
figure,pzmap(sys)
pole(sys)
zero(sys)
%//////////////////////////////////////////////////////////////////////
%/////////////////////////////////////////////////////////////////////
sysc = d2c(sys,'tustin')
H = zpk(sysc)
[z,p,k] = zpkdata(sys)
end


%//////////////////////////////////////////////////////////////////////////